BiwaScheme is an IL based Compiler-Interpreter.

Most of the opecodes are inherited from [[3imp_pdf]].

Registers:
* a [object] : temporary
* x [opecodes] : opecodes to execute next
* f [integer] : [TODO: denotes start position of free variables in the stack?]
* c [closure] : closure object which is currently executed (set to [] in toplevel)
** Closure object contains information about freevars (outer variables). When closure requires value of a free variable, it is retrieved from this register.
** Used by [[op_refer_free]], [[op_assign_free]]
* s [integer] : denotes stack size (TODO: can we remove this by using ary.push()/ary.pop()?)

Opecodes:
* [[op_halt]]
* [[op_refer-local]]
* [[op_refer-free]]
* [[op_refer-global]]
* [[op_indirect]]
* [[op_constant]]
* [[op_close]]
* [[op_box]]
* [[op_test]]
* [[op_assign-global]]
* [[op_assign-local]]
* [[op_assign-free]]
* [[op_conti]]
* [[op_nuate]]
* [[op_frame]]
* [[op_argument]]
* [[op_shift]]
* [[op_apply]]
* [[op_return]]