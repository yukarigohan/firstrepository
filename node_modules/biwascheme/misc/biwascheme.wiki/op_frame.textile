Pushes stack frame. (-> [[IntermediateLanguage]])

op_frame must be called before applying a function, except when it is a tail call (see also: [[op_shift]].)

h1. format

<pre><code>["frame", <opecodes_next>, <opecodes_after>]</code></pre>

* opecodes_after
** opecodes executed after the new stack frame is popped from stack

h1. description

op_frame pushes a frame (i.e. the following values) onto stack:

* <opecodes_after> - opecodes to execute after new frame is popped //stack top
* value of 'f' register - position of previous frame
* value of 'c' register - the closure currently executed

Usually this frame is popped by [[op_return]].

op_frame is generated by:

* function calls (foo 1 2 3)
* call/cc (call/cc func)

h1. example

program:
<pre><code>(print 11)</code></pre>

compiled:
<pre><code>[frame        // op_frame
   [constant 11          // push arguments to stack           
   [argument
   [constant 1           // push number of arguments 
   [argument
   [refer-global "print" // load function to 'a' register
   [apply]]]]]]          // invoke function
[halt]]</code></pre>

Note that op_frame itself does not touch 'f' register. Since function arguments are evaluated between op_frame and [[op_apply]] and these evaluations must be done in the current frame, 'f' register is updated by [[op_apply]].