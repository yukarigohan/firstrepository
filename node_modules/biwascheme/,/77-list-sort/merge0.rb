require_relative 'check.rb'
# マージソート

def merge_sort(ls, comp)
  if ls.length <= 1
    return ls
  else
    # リストを半分にし、それぞれをソートされた状態にする
    len1 = ls.length / 2
    len2 = ls.length - len1
    ls1, ls2 = merge_sort(ls[0, len1], comp),
               merge_sort(ls[len1, len2], comp)

    # マージを行う
    ret = Array.new(ls.length)
    i, j, k = 0, 0, 0
    while i < len1 && j < len2
      if comp.call(ls1[i], ls2[j])
        ret[k] = ls1[i]; k+=1; i+=1
      else
        ret[k] = ls2[j]; k+=1; j+=1
      end
    end
    while i < len1
      ret[k] = ls1[i]; k+=1; i+=1
    end
    while j < len2
      ret[k] = ls2[j]; k+=1; j+=1
    end

#    a, b = ls1[0], ls2[0]
#    i, j, k = 0, 0, 0
#    loop do
#      if comp[a, b]
#        ret[i] = a; i+=1; j+=1
#        break if j >= len1
#        a = ls1[j]
#      else
#        ret[i] = b; i+=1; k+=1
#        break if k >= len2
#        b = ls2[k]
#      end
#    end
#    while j < len1
#      ret[i] = ls1[j]; i+=1; j+=1
#    end
#    while k < len2
#      ret[i] = ls2[k]; i+=1; k+=1
#    end
    return ret
  end
end

check do |ary|
  merge_sort(ary, lambda{|a, b| a < b})
end
