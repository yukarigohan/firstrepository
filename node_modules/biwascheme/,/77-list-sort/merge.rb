require_relative 'check.rb'

def merge_sort(ls, comp)
  if ls.length <= 1
    return ls
  else
    # リストを半分にし、それぞれをソートされた状態にする
    len1 = ls.length / 2
    len2 = ls.length - len1
    ls1, ls2 = merge_sort(ls[0, len1], comp),
               merge_sort(ls[len1, len2], comp)

    # マージを行う
    ret = Array.new(ls.length)
    i, j, k = 0, 0, 0
    while i < len1 && j < len2
      if comp.call(ls2[j], ls1[i])
        ret[k] = ls2[j]; k+=1; j+=1
      else
        ret[k] = ls1[i]; k+=1; i+=1
      end
    end
    while i < len1
      ret[k] = ls1[i]; k+=1; i+=1
    end
    while j < len2
      ret[k] = ls2[j]; k+=1; j+=1
    end
    return ret
  end
end

#p merge_sort(["1a", "1b", "1c"], lambda{|a, b| a[0] < b[0]})

check do |ary|
  merge_sort(ary, lambda{|a, b| a < b})
end
