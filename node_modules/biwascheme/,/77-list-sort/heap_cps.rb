def heap_sort!(ary, comp, state)
  case state[0]
  when 0
    return heap_sort!(ary, comp, [1, (ary.length-2)/2, ary.length-1])
  when 1, 4
    s, k, r = *state
    i = k
    v = ary[k]

    j = 2*i+1
    return heap_sort!(ary, comp, [s+1, k, i, v]) if j > r
    ...
  when 2, 5
    s, k, i, v = *state
    ary[i] = v
    if k == 0
      return heap_sort!(ary, comp, [3, ary.length-1])
    else
      return heap_sort!(ary, comp, [1, k-1, ary.length-1]) 
    end
  when 3
    s, t = *state
    ary[0], ary[t] = ary[t], ary[0]
    return heap_sort!(ary, comp, [4, 0, t-1])
  else
    raise
  end
end

a = [2143,43,7798,98,98,67,2,34543,2]
heap_sort!(a, lambda{|a, b| a < b}, [0])
p a
