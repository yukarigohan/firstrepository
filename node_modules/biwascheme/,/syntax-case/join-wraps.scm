(define (mark? x)
  (and (string? x) (#/mark/ x)))

(define mark-eq? string=?)

(define (join-wraps wrap1 wrap2)
  (cond
    [(null? wrap1) wrap2]
    [(null? wrap2) wrap1]
    [else
      (let f ([w (car wrap1)] [w* (cdr wrap1)])
        (if (null? w*)
          (if (and (mark? w) (mark-eq? (car wrap2) w)) (cdr wrap2)
            (cons w wrap2))
          (cons w (f (car w*) (cdr w*)))))]))

(print
  (join-wraps '("mark1" "mark2") '("mark1" "mark2"))
)
